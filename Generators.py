a = [2 for i in range(10)]
print(a)

b = [i % 4 for i in range(10)]
print(b)

c = [ord(i) for i in 'asdfjkl']
print(c)

import random

d = [random.randint(-10, 10) for i in range(10)]
print(d)

e = [zuza * 2 for zuza in range(20)]
print(e)

f = [(i, j) for i in 'abc' for j in [1, 2, 3]]
print('f:', f)

g = [i * j for i in [1, 2, 3, 4, 5, 6] for j in [1, 2, 3] if i * j >= 10]
print(g)

# Генератор списков очень удобен когда нужно заполнить список одной строкой:

a0 = [i for i in range(10)] # – открываем оператор а в котором будем генератор списка.

# Вывод: [0,1,2,3,4,5,6,7,8,9] – обращение к оператору a

# С переменной i внутри списка можно проводить операции

# Например
a1 = [i ** 2 for i in range(10)]

# Вывод: [0, 1, 4, 9, 16, 25, 36, 49, 64, 81] – обращение к оператору a

# Операции над переменной i можно проводить почти любые.

# Обходить можно не только range:

a2 = [i for i in 'abcdefg']

# Вывод ['a', 'b', 'c', 'd', 'e', 'f', 'g'] – Обращение к оператору а

# В случае с строками оператор i можно умножить и тогда все обхождаемые буквы умножатся в n раз

a3 = [i for i in range(6)]

print(sum(a))
# Вывод – 15.

# Также в генераторе списков можно ставить условия:

a4 = [i for i in range(11) if i%2 == 0] # – условие определяющее четность

# Вывод: [0, 2, 4, 6, 8, 10]

# Можно также делать и сложные условия по типу:

a4 = [i for i in range(11) if i%2 == 0 and i %3 == 0] # – двойное условие

# Вывод: [0, 6] – эти числа делятся без остатка на 2 и 3.

# a5 = [int(input()) for i in range(3)]

print(a) # – таким образом мы можем заполнить список данными которые вводим черезь коносль (cmd)

a6 = 4

b = 5

# c = [[0]*a for i in range(b)]

# for i in c:
#     print(i) # – таким образом можно легко сделать двумерный список:

# [0, 0, 0, 0]
#
# [0, 0, 0, 0]
#
# [0, 0, 0, 0]
#
# [0, 0, 0, 0]
#
# [0, 0, 0, 0]

# Если вместо [0] поставить int(input()) можно заполнить списки числами которые вы вводите через коносль (cmd)

a = [(i,j) for i in range(1,4) for j in 'abc']

for i in a:
    print(i) # – вложенные лист comprehension

# Вывод:

# (1, 'a')
#
# (1, 'b')
#
# (1, 'c')
#
# (2, 'a')
#
# (2, 'b')
#
# (2, 'c')
#
# (3, 'a')
#
# (3, 'b')
#
# (3, 'c')

# Теперь давайте попробуем обходить вот такой список из кортежей:

a = [

    ('mansurov', 1987),

    ('saidov', 2001),

    ('burhanov', 1997),

    ('abzalv', 2008),

    ('nuraev', 2002),

    ('dostiqov', 1988),

    ('juraev', 2007),

    ('amanov', 2009),

    ('raisov', 2002)

]

print([i for i in a]) # – данное выражение выведет нам все элементы

# Так как у кортежей есть индекс а именно в нашем случае 0 индекс это фамилии а первый индекс год рождения. Мы можем их обходить генератором списков:

print([i[0] for i in a]) # – выводим все фамилии i[1] – все года рожд.

# Можно обходить по самому списку:

# print([i for i in a[3]]) - ['abzalv', 2008]

# Также можно ставить условия:

print([i for i in a if len(i[0]) > 6])
# – тоесть мы ставим условие если длина i[0] – фамилии, больше 6 то мы выводим данную строчку:

[('mansurov', 1987), ('burhanov', 1997), ('dostiqov', 1988)]

#Можете также выполнить данное выражение и посмотреть что будет

print([i[0][0] for i in a if i[1] > 2000])

print('*'*50)
print('YIELD')

def gen(n):
    while n >= 0:
        yield  n-1
        n-=1

g = gen(4)
print(next(g))
